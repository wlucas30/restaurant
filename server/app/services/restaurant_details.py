from services.db_connection import connect# This function returns all available information about a restaurant corresponding to the provided restaurantID.def getRestaurantDetails(restaurantID):    # Attempt to connect to the database    connection = connect()        if connection[0] is not None:        with connection[0] as connection:            with connection.cursor() as cursor:                # Prepare empty record for storing the output                output = {                    "name" : None,                    "description" : None,                    "category" : None,                    "location" : None,                    "openingPeriods": None                }                # Obtain the necessary information from the database                sql = """                        SELECT                        	Restaurant.name,                        	Restaurant.description,                        	Restaurant.category,                        	Restaurant.location,                        	GROUP_CONCAT(                                CONCAT(                                    OpeningPeriod.dayOfWeek,                                     ': ',                                    OpeningPeriod.openingTime,                                    ' - ',                                    OpeningPeriod.closingTime                                ) ORDER BY OpeningPeriod.dayOfWeek ASC SEPARATOR ', '                            ) AS openingPeriods                        FROM                        	Restaurant                        INNER JOIN                        	OpeningPeriod ON Restaurant.restaurantID = OpeningPeriod.restaurantID                        WHERE                        	Restaurant.restaurantID = %s;                """                                # This automatically escapes the input parameter to prevent injection attacks                cursor.execute(sql, (restaurantID,))                result = cursor.fetchone()                                # Encode the result into the response record                for i in range(5):                    attribute = ["name", "description", "category", "location", "openingPeriods"][i]                    output[attribute] = result[i]                                # Return the restaurant details with no error message                return (output, None)                        else:        # An error has occurred, return the error message        return (None, connection[1])